diff -aruN metis-old/Lib/Makefile metis-new/Lib/Makefile
--- metis-old/Lib/Makefile	2006-08-31 14:22:01.000000000 +0200
+++ metis-new/Lib/Makefile	2019-05-06 20:33:44.000000000 +0200
@@ -14,7 +14,7 @@
        myqsort.o compress.o parmetis.o estmem.o \
        mpmetis.o mcoarsen.o mmatch.o minitpart.o mbalance.o \
        mrefine.o mutil.o mfm.o mkmetis.o mkwayrefine.o mkwayfmh.o \
-       mrefine2.o minitpart2.o mbalance2.o mfm2.o \
+       mrefine2.o minitpart2.o mbalance2.o mfm2.o rand48.o \
        kvmetis.o kwayvolrefine.o kwayvolfm.o subdomains.o
 
 .c.o:
diff -aruN metis-old/Lib/rand48.c metis-new/Lib/rand48.c
--- metis-old/Lib/rand48.c	1970-01-01 01:00:00.000000000 +0100
+++ metis-new/Lib/rand48.c	2019-05-06 20:33:11.000000000 +0200
@@ -0,0 +1,66 @@
+#ifdef __MINGW32__
+#include <math.h>
+
+#define RAND48_SEED_0   (0x330e)
+#define RAND48_SEED_1 (0xabcd)
+#define RAND48_SEED_2 (0x1234)
+#define RAND48_MULT_0 (0xe66d)
+#define RAND48_MULT_1 (0xdeec)
+#define RAND48_MULT_2 (0x0005)
+#define RAND48_ADD (0x000b)
+
+unsigned short _rand48_seed[3] = {
+        RAND48_SEED_0,
+        RAND48_SEED_1,
+        RAND48_SEED_2
+};
+unsigned short _rand48_mult[3] = {
+        RAND48_MULT_0,
+        RAND48_MULT_1,
+        RAND48_MULT_2
+};
+unsigned short _rand48_add = RAND48_ADD;
+
+void
+ _dorand48(unsigned short xseed[3])
+ {
+	         unsigned long accu;
+	         unsigned short temp[2];
+	
+	         accu = (unsigned long)_rand48_mult[0] * (unsigned long)xseed[0] +
+	          (unsigned long)_rand48_add;
+	         temp[0] = (unsigned short)accu;        /* lower 16 bits */
+	         accu >>= sizeof(unsigned short)* 8;
+	         accu += (unsigned long)_rand48_mult[0] * (unsigned long)xseed[1] +
+	          (unsigned long)_rand48_mult[1] * (unsigned long)xseed[0];
+	         temp[1] = (unsigned short)accu;        /* middle 16 bits */
+	         accu >>= sizeof(unsigned short)* 8;
+	         accu += _rand48_mult[0] * xseed[2] + _rand48_mult[1] * xseed[1] + _rand48_mult[2] * xseed[0];
+	         xseed[0] = temp[0];
+	         xseed[1] = temp[1];
+	         xseed[2] = (unsigned short)accu;
+}
+
+double erand48(unsigned short xseed[3])
+{
+         _dorand48(xseed);
+         return ldexp((double) xseed[0], -48) +
+                ldexp((double) xseed[1], -32) +
+                ldexp((double) xseed[2], -16);
+}
+
+double drand48(){
+	return erand48(_rand48_seed);
+}
+
+void srand48(long seed){
+	_rand48_seed[0] = RAND48_SEED_0;
+	_rand48_seed[1] = (unsigned short)seed;
+	_rand48_seed[2] = (unsigned short)(seed >> 16);
+	_rand48_mult[0] = RAND48_MULT_0;
+	_rand48_mult[1] = RAND48_MULT_1;
+	_rand48_mult[2] = RAND48_MULT_2;
+	_rand48_add = RAND48_ADD;
+}
+
+#endif
